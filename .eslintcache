[{"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\index.tsx":"1","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\App.tsx":"2","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\giosg_api.tsx":"3","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\key.tsx":"4","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\context\\apiDataContext.tsx":"5","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useStoredData.tsx":"6","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\BoxDisplay.tsx":"7","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Table.tsx":"8","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\SearchBar.tsx":"9","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Row.tsx":"10","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Result.tsx":"11","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Paginate.tsx":"12"},{"size":185,"mtime":1612278020508,"results":"13","hashOfConfig":"14"},{"size":324,"mtime":1612792435148,"results":"15","hashOfConfig":"14"},{"size":217,"mtime":1612365186861,"results":"16","hashOfConfig":"14"},{"size":88,"mtime":1612276496700,"results":"17","hashOfConfig":"14"},{"size":1249,"mtime":1612800609099,"results":"18","hashOfConfig":"14"},{"size":845,"mtime":1612448450944,"results":"19","hashOfConfig":"14"},{"size":806,"mtime":1612794857865,"results":"20","hashOfConfig":"14"},{"size":1898,"mtime":1612802845553,"results":"21","hashOfConfig":"14"},{"size":3482,"mtime":1612797591245,"results":"22","hashOfConfig":"14"},{"size":913,"mtime":1612794733498,"results":"23","hashOfConfig":"14"},{"size":1035,"mtime":1612797534279,"results":"24","hashOfConfig":"14"},{"size":829,"mtime":1612802910681,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"o1q3qo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\index.tsx",[],["54","55"],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\App.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\giosg_api.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\key.tsx",[],["56","57"],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\context\\apiDataContext.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useStoredData.tsx",["58","59"],"import {useState, useEffect} from 'react'\r\n\r\nexport const useStoredData = (type: string, defaultValue?: string) => {\r\n    type useStoredDataRes = [\r\n        data: string,\r\n        setCurrentData: (value: string) => void\r\n    ]\r\n    const [data, setData] = useState<string>(defaultValue || '')\r\n\r\n    useEffect (() => {\r\n        try {\r\n            setData(window.localStorage.getItem(type) || '' )\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            window.localStorage.setItem(type, data)\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n        \r\n    }, [data])\r\n\r\n    const setCurrentData = (value: string) =>{\r\n        setData(value)\r\n    }\r\n\r\n    const returned: useStoredDataRes = [data, setCurrentData]\r\n\r\n    return returned\r\n}\r\n\r\n\r\n","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\BoxDisplay.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Table.tsx",["60"],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\SearchBar.tsx",["61"],"import { FormEvent } from \"react\"\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { DataContext } from '../context/apiDataContext'\r\nimport  { useStoredData }  from '../hooks/useStoredData'\r\n\r\nconst SearchBar = () => {\r\n    const { fetchData } = useContext(DataContext)\r\n    const [startDate, setStartDate] = useStoredData('start_date','')\r\n    const [endDate, setEndDate] = useStoredData('end_date','')\r\n    const [token, setToken] = useStoredData('token','')\r\n\r\n    const getData = () => {\r\n        if(fetchData !== undefined) fetchData(\r\n            startDate, \r\n            endDate, \r\n            token\r\n        )\r\n    }\r\n\r\n    useEffect(getData, [startDate, token, endDate])\r\n    \r\n    const onSubmit = (event: FormEvent) => {\r\n        event.preventDefault()\r\n        getData()\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <form onSubmit={onSubmit} style={{margin: 'auto', display: 'flex', flexDirection: 'column', width: '80%'}}>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>Start Date</label>\r\n                    <input\r\n                        style={input}\r\n                        name='start_date' \r\n                        type=\"date\" \r\n                        placeholder=\"yyyy-mm-dd\" \r\n                        min='2017-05-01' \r\n                        max={endDate || '2017-06-15'}\r\n                        value ={startDate}\r\n                        onChange = {(ev) => {\r\n                            const newDate = new Date(ev.target.value)\r\n                            setStartDate(newDate.toISOString().split(\"T\")[0])\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>End Date</label>\r\n                    <input \r\n                        style={input}\r\n                        name='end_date' \r\n                        type=\"date\" \r\n                        placeholder=\"yyyy-mm-dd\" \r\n                        min={startDate || '2017-05-01'} \r\n                        max='2017-06-15'\r\n                        value ={endDate}\r\n                        onChange = {(ev) => {\r\n                            const newDate = new Date(ev.target.value)\r\n                            setEndDate(newDate.toISOString().split(\"T\")[0])\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>Token</label>\r\n                    <input \r\n                        style={input}\r\n                        name='token'\r\n                        value ={token}\r\n                            onChange = {(ev) => {\r\n                                setToken(ev.target.value)\r\n                            }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style: React.CSSProperties = {\r\n    display: 'flex',\r\n    height: '16%',\r\n    marginTop: '0.3rem',\r\n    marginBottom: '0.6rem'\r\n}\r\n\r\nconst inputSegment: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    marginTop: '0.5rem',\r\n    width: '90%',\r\n    maxWidth: '640px'\r\n}\r\n\r\nconst input: React.CSSProperties = {\r\n    borderRadius: '0.2rem',\r\n    border: '1px solid grey',\r\n    height: '1.4rem'\r\n}\r\n\r\nconst label: React.CSSProperties = {\r\n    width: '100%',\r\n    marginBottom: '0.1rem',\r\n    fontSize: 'small'\r\n}\r\nexport default SearchBar","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Row.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Result.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Paginate.tsx",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"63","replacedBy":"67"},{"ruleId":"65","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":17,"column":8,"nodeType":"71","endLine":17,"endColumn":10,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":26,"column":8,"nodeType":"71","endLine":26,"endColumn":14,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"75","line":17,"column":8,"nodeType":"71","endLine":17,"endColumn":26,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"77","line":20,"column":24,"nodeType":"71","endLine":20,"endColumn":51,"suggestions":"78"},{"ruleId":"69","severity":1,"message":"79","line":15,"column":8,"nodeType":"71","endLine":15,"endColumn":28,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],["81"],["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setData' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["84"],"React Hook useEffect has a missing dependency: 'displayNumber'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["86"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["87"],"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [type]",{"range":"98","text":"99"},"Update the dependencies array to be: [data, type]",{"range":"100","text":"101"},"Update the dependencies array to be: [displayNumber, list, startPoint]",{"range":"102","text":"103"},"Update the dependencies array to be: [startDate, token, endDate, fetchData]",{"range":"104","text":"105"},"Update the dependencies array to be: [props, props.dsplayedPage]",{"range":"106","text":"107"},[480,482],"[type]",[660,666],"[data, type]",[608,626],"[displayNumber, list, startPoint]",[664,691],"[startDate, token, endDate, fetchData]",[666,686],"[props, props.dsplayedPage]"]