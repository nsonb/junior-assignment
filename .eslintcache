[{"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\index.tsx":"1","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\App.tsx":"2","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\giosg_api.tsx":"3","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\key.tsx":"4","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\context\\apiDataContext.tsx":"5","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useStoredData.tsx":"6","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\BoxDisplay.tsx":"7","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Table.tsx":"8","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\SearchBar.tsx":"9","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Row.tsx":"10","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Result.tsx":"11","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Paginate.tsx":"12","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useContainerDimensions.tsx":"13","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Footer.tsx":"14","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Header.tsx":"15","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\MobileRow.tsx":"16","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Graph.tsx":"17"},{"size":185,"mtime":1612278020508,"results":"18","hashOfConfig":"19"},{"size":421,"mtime":1613045339401,"results":"20","hashOfConfig":"19"},{"size":217,"mtime":1612365186861,"results":"21","hashOfConfig":"19"},{"size":88,"mtime":1612276496700,"results":"22","hashOfConfig":"19"},{"size":1249,"mtime":1612800609099,"results":"23","hashOfConfig":"19"},{"size":845,"mtime":1612448450944,"results":"24","hashOfConfig":"19"},{"size":780,"mtime":1612996556949,"results":"25","hashOfConfig":"19"},{"size":2787,"mtime":1613222719837,"results":"26","hashOfConfig":"19"},{"size":3535,"mtime":1613044668592,"results":"27","hashOfConfig":"19"},{"size":997,"mtime":1613045155716,"results":"28","hashOfConfig":"19"},{"size":1548,"mtime":1613222821120,"results":"29","hashOfConfig":"19"},{"size":2838,"mtime":1613224611321,"results":"30","hashOfConfig":"19"},{"size":872,"mtime":1612995810015,"results":"31","hashOfConfig":"19"},{"size":131,"mtime":1613045256965,"results":"32","hashOfConfig":"19"},{"size":133,"mtime":1613148896710,"results":"33","hashOfConfig":"19"},{"size":1152,"mtime":1613047971365,"results":"34","hashOfConfig":"19"},{"size":4992,"mtime":1613225321680,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"o1q3qo",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\index.tsx",[],["75","76"],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\App.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\giosg_api.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\fetch\\key.tsx",[],["77","78"],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\context\\apiDataContext.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useStoredData.tsx",["79","80"],"import {useState, useEffect} from 'react'\r\n\r\nexport const useStoredData = (type: string, defaultValue?: string) => {\r\n    type useStoredDataRes = [\r\n        data: string,\r\n        setCurrentData: (value: string) => void\r\n    ]\r\n    const [data, setData] = useState<string>(defaultValue || '')\r\n\r\n    useEffect (() => {\r\n        try {\r\n            setData(window.localStorage.getItem(type) || '' )\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            window.localStorage.setItem(type, data)\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n        \r\n    }, [data])\r\n\r\n    const setCurrentData = (value: string) =>{\r\n        setData(value)\r\n    }\r\n\r\n    const returned: useStoredDataRes = [data, setCurrentData]\r\n\r\n    return returned\r\n}\r\n\r\n\r\n","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\BoxDisplay.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Table.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\SearchBar.tsx",["81"],"import { FormEvent } from \"react\"\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { DataContext } from '../context/apiDataContext'\r\nimport  { useStoredData }  from '../hooks/useStoredData'\r\n\r\nconst SearchBar = () => {\r\n    const { fetchData } = useContext(DataContext)\r\n    const [startDate, setStartDate] = useStoredData('start_date','')\r\n    const [endDate, setEndDate] = useStoredData('end_date','')\r\n    const [token, setToken] = useStoredData('token','')\r\n\r\n    const getData = () => {\r\n        if(fetchData !== undefined) fetchData(\r\n            startDate, \r\n            endDate, \r\n            token\r\n        )\r\n    }\r\n\r\n    useEffect(getData, [startDate, token, endDate])\r\n    \r\n    const onSubmit = (event: FormEvent) => {\r\n        event.preventDefault()\r\n        getData()\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <form onSubmit={onSubmit} style={{margin: 'auto', display: 'flex', flexDirection: 'column', width: '80%'}}>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>Start Date</label>\r\n                    <input\r\n                        style={input}\r\n                        name='start_date' \r\n                        type=\"date\" \r\n                        placeholder=\"yyyy-mm-dd\" \r\n                        min='2017-05-01' \r\n                        max={endDate || '2017-06-15'}\r\n                        value ={startDate}\r\n                        onChange = {(ev) => {\r\n                            const newDate = new Date(ev.target.value)\r\n                            setStartDate(newDate.toISOString().split(\"T\")[0])\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>End Date</label>\r\n                    <input \r\n                        style={input}\r\n                        name='end_date' \r\n                        type=\"date\" \r\n                        placeholder=\"yyyy-mm-dd\" \r\n                        min={startDate || '2017-05-01'} \r\n                        max='2017-06-15'\r\n                        value ={endDate}\r\n                        onChange = {(ev) => {\r\n                            const newDate = new Date(ev.target.value)\r\n                            setEndDate(newDate.toISOString().split(\"T\")[0])\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div style={inputSegment}>\r\n                    <label style={label}>Token</label>\r\n                    <input \r\n                        style={input}\r\n                        name='token'\r\n                        placeholder ='Access Token'\r\n                        value ={token}\r\n                            onChange = {(ev) => {\r\n                                setToken(ev.target.value)\r\n                            }}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style: React.CSSProperties = {\r\n    display: 'flex',\r\n    height: '16%',\r\n    marginTop: '0.3rem',\r\n    marginBottom: '0.6rem'\r\n}\r\n\r\nconst inputSegment: React.CSSProperties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    marginTop: '0.5rem',\r\n    width: '90%',\r\n    maxWidth: '800px'\r\n}\r\n\r\nconst input: React.CSSProperties = {\r\n    borderRadius: '0.2rem',\r\n    border: '1px solid grey',\r\n    height: '1.4rem'\r\n}\r\n\r\nconst label: React.CSSProperties = {\r\n    width: '100%',\r\n    marginBottom: '0.1rem',\r\n    fontSize: 'small'\r\n}\r\nexport default SearchBar","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Row.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Result.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Paginate.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\hooks\\useContainerDimensions.tsx",["82"],"import { useEffect, useState } from \"react\";\r\n\r\nexport interface refElement extends HTMLDivElement {\r\n    current?:  {\r\n        offsetWidth: number\r\n        offsetHeight: number\r\n    }\r\n}\r\n\r\nexport const useContainerDimensions = (myRef : refElement) => {\r\n    const getDimensions = () => ({\r\n      width: myRef?.current?.offsetWidth || 0,\r\n      height: myRef?.current?.offsetHeight || 0\r\n    })\r\n  \r\n    const [dimensions, setDimensions] = useState({ width: 0, height: 0 })\r\n  \r\n    useEffect(() => {\r\n      const handleResize = () => {\r\n        setDimensions(getDimensions())\r\n      }\r\n  \r\n      if (myRef.current) {\r\n        setDimensions(getDimensions())\r\n      }\r\n  \r\n      window.addEventListener(\"resize\", handleResize)\r\n  \r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize)\r\n      }\r\n    }, [myRef])\r\n  \r\n    return dimensions;\r\n  };","E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Footer.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Header.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\MobileRow.tsx",[],"E:\\Assignments\\giosg\\junior-fetch-api-for\\src\\components\\Graph.tsx",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":17,"column":8,"nodeType":"93","endLine":17,"endColumn":10,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":26,"column":8,"nodeType":"93","endLine":26,"endColumn":14,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":20,"column":24,"nodeType":"93","endLine":20,"endColumn":51,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":32,"column":8,"nodeType":"93","endLine":32,"endColumn":15,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":10,"column":12,"nodeType":"103","messageId":"104","endLine":10,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":10,"column":27,"nodeType":"103","messageId":"104","endLine":10,"endColumn":43},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],["106"],["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array. If 'setData' needs the current value of 'type', you can also switch to useReducer instead of useState and read 'type' in the reducer.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["110"],"React Hook useEffect has a missing dependency: 'getDimensions'. Either include it or remove the dependency array.",["111"],"@typescript-eslint/no-unused-vars","'currentDsplay' is assigned a value but never used.","Identifier","unusedVar","'setCurrentDsplay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [type]",{"range":"120","text":"121"},"Update the dependencies array to be: [data, type]",{"range":"122","text":"123"},"Update the dependencies array to be: [startDate, token, endDate, fetchData]",{"range":"124","text":"125"},"Update the dependencies array to be: [getDimensions, myRef]",{"range":"126","text":"127"},[480,482],"[type]",[660,666],"[data, type]",[664,691],"[startDate, token, endDate, fetchData]",[830,837],"[getDimensions, myRef]"]